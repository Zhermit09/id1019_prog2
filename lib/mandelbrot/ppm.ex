defmodule Mandelbrot.PPM do
  # write(name, image) The image is a list of rows, each row a list of
  # tuples {R,G,B}. The RGB values are 0-255.

  def save(name, image) do
    height = length(image)
    width = length(List.first(image))
    File.cd!("./lib/mandelbrot/data/")

    {:ok, fd} = File.open(name <> ".ppm", [:write])
    IO.puts(fd, "P6")
    IO.puts(fd, "#generated by ppm.ex")
    IO.puts(fd, "#{width} #{height}")
    IO.puts(fd, "255")
    rows(image, fd)
    File.close(fd)

    System.cmd("magick", [name <> ".ppm", name <> ".png"])
  end

  defp rows(rows, fd) do
    Enum.each(rows, fn r ->
      colors = row(r)
      IO.write(fd, colors)
    end)
  end

  defp row(row) do
    List.foldr(row, [], fn {r, g, b}, a ->
      [r, g, b | a]
    end)
  end
end
